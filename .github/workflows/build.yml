name: Build

on: push

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: foobar_key
      AWS_SECRET_ACCESS_KEY: foobar_secret

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.20"

      - name: Build
        run: go build -v ./...

      - name: Test
        run: |
          go test -v -race -short ./...
          go test -v ./...
          go vet ./...

      - name: Staticcheck
        run: |
          make bin/staticcheck && ./bin/staticcheck

  release:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: build
    permissions:
      contents: write
      pull-requests: write
    outputs:
      release_created: ${{ steps.release-please.outputs.release_created }}
      tag_name: ${{ steps.release-please.outputs.tag_name }}
    
    steps:
      - uses: actions/download-artifact@v3

      - uses: google-github-actions/release-please-action@v3
        id: release-please
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: go
          package-name: actions-test
          bump-minor-pre-major: true
          bump-patch-for-minor-pre-major: true
          extra-files: |
            ${{github.workspace}}/artifact/*.tar.gz

      - uses: actions/checkout@v3
        if: ${{ steps.release-please.outputs.release_created }}

      - name: tag major and minor versions
        if: ${{ steps.release-please.outputs.release_created }}
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          git remote add gh-token "https://${{ secrets.GITHUB_TOKEN }}@github.com/google-github-actions/release-please-action.git"
          git tag -d v${{ steps.release-please.outputs.major }} || true
          git tag -d v${{ steps.release-please.outputs.major }}.${{ steps.release-please.outputs.minor }} || true
          git push origin :v${{ steps.release-please.outputs.major }} || true
          git push origin :v${{ steps.release-please.outputs.major }}.${{ steps.release-please.outputs.minor }} || true
          git tag -a v${{ steps.release-please.outputs.major }} -m "Release v${{ steps.release-please.outputs.major }}"
          git tag -a v${{ steps.release-please.outputs.major }}.${{ steps.release-please.outputs.minor }} -m "Release v${{ steps.release-please.outputs.major }}.${{ steps.release-please.outputs.minor }}"
          git push origin v${{ steps.release-please.outputs.major }}
          git push origin v${{ steps.release-please.outputs.major }}.${{ steps.release-please.outputs.minor }}

  release-bins:
    runs-on: ubuntu-latest
    needs: release
    if: ${{ needs.release.outputs.release_created }}
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goarch: arm64
            goos: windows
    steps:
    - uses: actions/checkout@v3
    - uses: wangyoucao577/go-release-action@v1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        goos: ${{ matrix.goos }}
        goarch: ${{ matrix.goarch }}
        goversion: "1.20"
        release_tag: ${{ needs.release.outputs.tag_name }}
        md5sum: false
        asset_name: sidekick-${{ matrix.goos }}-${{ matrix.goarch }}